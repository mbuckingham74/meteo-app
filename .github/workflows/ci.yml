name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
    # Backend testing and linting
    backend:
      name: Backend Tests
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [14.x, 16.x, 18.x]

      steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Lint backend code
        run: |
          cd backend
          npm run lint || echo "Linting not configured yet"

      - name: Run backend tests
        run: |
          cd backend
          npm test || echo "Tests not implemented yet"
        env:
          NODE_ENV: test

    # Frontend testing and linting
    frontend:
      name: Frontend Tests
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [14.x, 16.x, 18.x]

      steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint frontend code
        run: |
          cd frontend
          npm run lint || echo "Linting not configured yet"

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --passWithNoTests --watchAll=false
        env:
          CI: true

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          REACT_APP_API_URL: http://localhost:5001/api
          CI: true

    # Docker build validation
    docker:
      name: Docker Build
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend Docker image
        run: |
          cd backend
          docker build -t meteo-backend:test .

      - name: Build frontend Docker image
        run: |
          cd frontend
          docker build -t meteo-frontend:test .

      - name: Verify Docker Compose configuration
        run: |
          docker compose config
